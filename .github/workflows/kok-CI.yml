name: kok-CI (Build & Push for kok)

on:
  push:
    branches:
      - main
      - develop
      - kok-api
      - kok-core

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Determine Image Tag (prod/dev)
        id: determine-tag
        run: |
          if [[ "$GITHUB_REF" == "refs/heads/main" ]]; then
            echo "IMAGE_TAG=_prod" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=_dev" >> $GITHUB_ENV
          fi

      - name: Build with Gradle (멀티모듈)
        run: |
          ./gradlew clean build -x test

      - name: Save Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: kok-api/build/libs/*.jar

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: kok-api/build/libs/

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push Docker Image
        run: |
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/kok${{ env.IMAGE_TAG }}"

          echo "Building Image: $IMAGE_NAME"
          docker build -t $IMAGE_NAME:${{ github.sha }} -f Dockerfile .
          docker push $IMAGE_NAME:${{ github.sha }}

      - name: Notify Deployment Trigger
        run: |
          echo "🚀 Docker 이미지 생성 완료! Image: $IMAGE_NAME"
